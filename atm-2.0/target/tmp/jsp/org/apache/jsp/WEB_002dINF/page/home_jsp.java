/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.3.22.v20171030
 * Generated at: 2018-08-11 06:17:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.page;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<body data-type=\"index\"  class=\"theme-white\">\n");
      out.write("\n");
      out.write("    <div   class=\"am-g tpl-g\" >\n");
      out.write("        <!-- 头部 -->\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/header.jsp", out, false);
      out.write("\n");
      out.write("        <!-- 风格切换 -->\n");
      out.write("\n");
      out.write("        <!-- 侧边导航栏 -->\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/left.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("        <!-- 内容区域 -->\n");
      out.write("        <div id=\"flow_lis\"  class=\"tpl-content-wrapper\">\n");
      out.write("\n");
      out.write("            <div class=\"row-content am-cf\">\n");
      out.write("                <div class=\"row  am-cf\">\n");
      out.write("                    <div v-for=\"card in cards\" class=\"am-u-sm-12 am-u-md-6 am-u-lg-4\" style=\"float:left;\">\n");
      out.write("                        <div  class=\"widget widget-primary am-cf\">\n");
      out.write("                            <div class=\"widget-statistic-header\">\n");
      out.write("                                <p v-text=\"card.cardNum\">6222*****196</p>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"widget-statistic-body\">\n");
      out.write("                                <div class=\"widget-statistic-value\">\n");
      out.write("                                    <p v-text=\"'￥'+card.balance\"> ￥27,294</p>\n");
      out.write("                                </div>\n");
      out.write("                                <div class=\"widget-statistic-description\">\n");
      out.write("\n");
      out.write("                                </div>\n");
      out.write("                                <span class=\"widget-statistic-icon am-icon-credit-card-alt\"></span>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                        <div class=\"am-u-sm-12 am-u-md-12 am-u-lg-6\">\n");
      out.write("                        <div class=\"widget am-cf\">\n");
      out.write("                            <div class=\"widget-head am-cf\">\n");
      out.write("                                <div class=\"widget-title am-fl\">最近十笔流水</div>\n");
      out.write("                                <div class=\"widget-function am-fr\">\n");
      out.write("                            </div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"widget-body  widget-body-lg am-fr\">\n");
      out.write("\n");
      out.write("                                <table width=\"100%\" class=\"am-table am-table-compact am-table-bordered am-table-radius am-table-striped tpl-table-black \" id=\"example-r\">\n");
      out.write("                                    <thead>\n");
      out.write("                                        <tr>\n");
      out.write("                                            <th>卡号</th>\n");
      out.write("                                            <th>金额</th>\n");
      out.write("                                            <th>备注</th>\n");
      out.write("                                            <th>时间</th>\n");
      out.write("                                        </tr>\n");
      out.write("                                    </thead>\n");
      out.write("                                    <tbody>\n");
      out.write("                                        <tr v-for=\"flow in flows\" class=\"gradeX\">\n");
      out.write("                                            <td v-text=\"flow.cardNum\"></td>\n");
      out.write("                                            <td v-text=\"flow.amount\"></td>\n");
      out.write("                                            <td v-text=\"flow.desc\"></td>\n");
      out.write("                                            <td v-text=\"flow.createTime\"></td>\n");
      out.write("                                        </tr>\n");
      out.write("                                        <!-- more data -->\n");
      out.write("                                    </tbody>\n");
      out.write("                                </table>\n");
      out.write("\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    </div>\n");
      out.write("    <script src=\"/assets/js/amazeui.min.js\"></script>\n");
      out.write("    <script src=\"/assets/js/amazeui.datatables.min.js\"></script>\n");
      out.write("    <script src=\"/assets/js/dataTables.responsive.min.js\"></script>\n");
      out.write("    <script src=\"/assets/js/app.js\"></script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("    var app = new Vue({\n");
      out.write("        el:\"#flow_lis\" ,\n");
      out.write("        data:{\n");
      out.write("            flows: {},\n");
      out.write("            cards:{},\n");
      out.write("        }\n");
      out.write("    })\n");
      out.write("\n");
      out.write("\n");
      out.write("    $(document).ready(function() {\n");
      out.write("        $.ajax({\n");
      out.write("            type: \"post\",\n");
      out.write("            dataType: \"json\",\n");
      out.write("            url: '/card/qTenflow.do',\n");
      out.write("            success: function (dataResult) {\n");
      out.write("                if (1000 == dataResult.code) {\n");
      out.write("                    app.flows = dataResult.data;\n");
      out.write("                }else{\n");
      out.write("                    alert(dataResult.message);\n");
      out.write("                    return false;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\n");
      out.write("\n");
      out.write("        $.ajax({\n");
      out.write("            type: \"post\",\n");
      out.write("            dataType: \"json\",\n");
      out.write("            url: '/card/cardInf.do',\n");
      out.write("            success: function (dataResult) {\n");
      out.write("                if (1000 == dataResult.code) {\n");
      out.write("                    app.cards = dataResult.data;\n");
      out.write("                }else{\n");
      out.write("                    alert(dataResult.message);\n");
      out.write("                    return false;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\n");
      out.write("    });\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
